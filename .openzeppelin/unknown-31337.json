{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x82b56598572fa7acd63ef223245f2c4be8a3c7eef059afc43ebb29fb09980c60",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x3bc355680777867d281dc16d23738e5e69662466b755c41cd0339217f73bd19c",
      "kind": "uups"
    },
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x82c167fe6bc0dc111ab4823d6f5d3e08479f3535c9104b6ab4549ee6771ff5db",
      "kind": "uups"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x32eccdb29c733b6dbf8913424735d87d27f78e4638cb6d0d2e9d68c7fc4e28be",
      "kind": "uups"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x2ebfcdf9cacec2b3465a9911c659fba1b0391f8717dd56bb9f34d4e85fff9a89",
      "kind": "uups"
    }
  ],
  "impls": {
    "013340e5ff08c06f97e83ce4cfc6aacce25df10817f65b11c7ff2206ed227374": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xadd7b536f8c97f99437dcb3180280a093643f0d40d80c4d43ebca0dd77e3fc4f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "NFDDates",
            "src": "contracts/NFDDates.sol:17"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "252",
            "type": "t_string_storage",
            "contract": "NFDDates",
            "src": "contracts/NFDDates.sol:18"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "253",
            "type": "t_struct(Counter)1184_storage",
            "contract": "NFDDates",
            "src": "contracts/NFDDates.sol:20"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "NFDDates",
            "src": "contracts/NFDDates.sol:23"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NFDDates",
            "src": "contracts/NFDDates.sol:25"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "NFDDates",
            "src": "contracts/NFDDates.sol:27"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "NFDDates",
            "src": "contracts/NFDDates.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)1184_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    }
  }
}
